{"version":3,"sources":["webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src async","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/app.component.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/app.module.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/app.service.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.component.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.module.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.routing.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.service.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.tpl.html","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/commons/common.module.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/commons/response.service.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/environments/environment.ts","webpack:////Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './app.service'\nimport { Subscription }   from 'rxjs/Subscription';\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`\n})\n\nexport class AppComponent implements OnInit{\n\nconstructor(private appService: AppService) { }\n\n  //  apiValues: string[] = [];\n\n   ngOnInit() {\n\n    //  this.appService.getValues().subscribe(elems => {\n    //         this.apiValues = elems;\n    //     });;\n\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule, Http } from '@angular/http';\nimport { RouterModule } from '@angular/router'\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service'\nimport { CommonModule } from '../commons/common.module'\nimport { TestModule } from './test/test.module'\n\n@NgModule({\n    imports: [ BrowserModule, CommonModule, HttpModule, TestModule, RouterModule],\n    providers:[ AppService],\n    declarations: [ AppComponent ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/app.module.ts","ï»¿import { Injectable } from '@angular/core';\nimport { ResponseService } from '../commons/response.service'\nimport { Observable } from \"rxjs/Observable\";\nimport { Http } from '@angular/http'\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class AppService {\n\nconstructor(private http: Http) { }\n\n  getValues(): any {\n    return this.http.get('/api/values').map(value => { return value.json();});\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/app.service.ts","import { Component, OnInit } from '@angular/core';\nimport {TestService} from './test.service'\n\n@Component({\n    selector: 'test-component',\n    templateUrl: 'test.tpl.html'\n})\n\n\nexport class TestComponent implements OnInit {\n\nconstructor(private testService: TestService) { }\n\n   apiValues: string[] = [];\n\n    ngOnInit(): void {\n           this.testService.getValues().subscribe(elems => {\n            this.apiValues = elems;\n        });;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'\nimport { TestComponent } from './test.component';\nimport { TestService } from './test.service'\nimport { testRouting } from './test.routing'\n\n@NgModule({\n    imports: [ CommonModule, testRouting],\n    exports: [],\n    declarations: [ TestComponent ],\n    providers: [ TestService ]\n})\n\nexport class TestModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { TestComponent } from './test.component'\n\nconst routes: Routes = [\n   { path: '', component: TestComponent },\n//    { path: '**', component: PageNotFoundComponent }\n];\n\n\nexport const testRouting =  RouterModule.forRoot(routes);\n\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.routing.ts","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs/Observable\";\nimport { Http } from '@angular/http'\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class TestService {\n\nconstructor(private http: Http) { }\n\n  getValues(): any {\n    return this.http.get('/api/values').map(value => { return value.json();});\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.service.ts","module.exports = \"<!--The whole content below can be removed with the new code.-->\\n<div style=\\\"text-align:center\\\">\\n    <h1>Application says what?</h1>\\n    <ul *ngFor=\\\"let value of apiValues\\\">\\n        <li>{{value}}</li>\\n    </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/app/test/test.tpl.html\n// module id = ../../../../../src/app/test/test.tpl.html\n// module chunks = 1","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ResponseService } from './response.service';\n\n@NgModule({\n    imports: [],\n    exports: [],\n    declarations: [],\n    providers: [ ResponseService ],\n})\n\n\nexport class CommonModule {\n    constructor(@Optional() @SkipSelf() parentCore: CommonModule) {\n        if (parentCore) {\n            throw new Error('CoreModule allready imported! Please use it only in main appModule');\n        }\n    }\n }\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/commons/common.module.ts","import { Http, Headers, Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { RestResponse} from './common.models'\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class ResponseService {\n    constructor(\n        private http: Http,\n        private router: Router) { }\n\n    public get<T>(path: string): Observable<T> {\n        const headers = new Headers();\n        this.createHeaders(headers);\n        return this.http.get(path, {\n            headers: headers\n        }).map((res: Response) => {\n            return this.processResponse<T>(res);\n            }).catch((error) => {\n                if (error.status === 401) {\n                this.navigateToLoginPage();\n            }\n                return Observable.throw(error);\n            });\n    }\n\n    public post<T>(path: string, data: any): Observable<T> {\n        const headers = new Headers();\n        this.createHeaders(headers);\n        return this.http.post(path,\n            JSON.stringify(data), {\n            headers: headers\n        }).map((res: Response) => {\n            return this.processResponse<T>(res);\n        }).catch((error) => {\n            if (error.status === 401) {\n                this.navigateToLoginPage();\n            }\n            return Observable.throw(error);\n        });\n    }\n\n    private processResponse<T>(response: Response): T {\n        if (response.status === 401) {\n            this.navigateToLoginPage();\n        }\n        if (response.status < 200) {\n            throw Error('Bad response status: ' + response.status);\n        }\n        const restResponse: RestResponse<T> = response.json();\n        if (restResponse.isSuccess) {\n            return restResponse.data;\n        } else {\n            throw Error(restResponse.errorMessage);\n        }\n    }\n\n    private createHeaders(headers: Headers) {\n        headers.append('Content-Type', 'application/json');\n        const token = localStorage.getItem('token');\n        if (!token) {\n            this.navigateToLoginPage();\n        }\n        headers.append('Authorization', 'Bearer ' + token);\n    }\n\n    private navigateToLoginPage() {\n        this.router.navigate(['/login']);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/commons/response.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/adamhakowski/Documents/Projects/AspNetCoreNg2/AspNetCoreNg2/src/main.ts"],"sourceRoot":""}